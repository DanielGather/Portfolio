@import "./../../../mixin.scss";
@import "./../../../variables.scss";

.container {
  width: 100%;
  display: flex;
  gap: 2rem;
  color: $main-color;
  font-family: $font-karla;
  padding-top: 10rem;
}

.left-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  width: 50%;
  h2 {
    font-size: 64px;
    font-family: $font-fira;
  }
  > :nth-child(1),
  > :nth-child(3) {
    font-size: 24px;
  }
  > :nth-child(3) {
    font-family: $font-fira;
  }
  > :nth-child(4),
  > :nth-child(6) {
    font-size: 16px;
    color: white;
    span {
      color: $main-color;
    }
  }
}

.placeholderRed::placeholder {
  color: red !important;
}

.right-container {
  width: 50%;
  display: flex;
  flex-direction: column;
  font-size: 24px;
  font-family: $font-fira;
}

.form-container {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  padding-bottom: 1.5rem;
  > label:not(:last-of-type) {
    padding-left: 2rem;
  }
  > textarea {
    &::placeholder {
      color: white;
      font-size: 18px;
      font-family: $font-karla;
    }
    background-color: transparent;
    border: none;
    color: white;
    padding-left: 2rem;
    font-size: 18px;
    line-height: normal;
  }
  > input {
    &::focus {
      border: red;
    }
    &::placeholder {
      color: white;
      font-size: 18px;
      font-family: $font-karla;
    }
    border: none;
    background-color: transparent;
    font-family: $font-karla;
    font-weight: 400;
    color: white;
    font-size: 18px;
    padding-left: 2rem;
  }
  > input.empty::placeholder {
    color: #ec9999;
  }
  button[type="submit"]:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }

  button {
    cursor: pointer;
    border: 1px solid white;
    border-radius: 1.5rem;
    align-self: center;
    padding: 0.5rem 1rem 0.5rem 1rem;
    width: fit-content;
    background-color: transparent;
    color: white;

    p {
      text-shadow: 0 0 1px $main-color, 29ch 0 1px $main-color;
      font-family: $font-karla;
      font-size: 18px;
    }
    overflow: hidden;
  }
  button:not(:disabled):hover {
    border-color: $main-color;
    color: transparent;
    transition: border-color 1s ease-in-out;

    p {
      transition: text-shadow 4s ease-in-out;
      animation: moveButtonText 2s linear infinite;
    }
  }

  > :nth-child(1),
  > :nth-child(3),
  > :nth-child(5),
  > :nth-child(7) {
    border-top: 1px solid $main-color;
    padding-top: 1.5rem;
  }
  //   > :nth-child(2),
  //   > :nth-child(4) {
  //     padding-bottom: 1rem;
  //   }
}

.notValid {
  padding-left: 2rem;
  font-size: 18px;
  color: #ec9999;
}
.notValid:last-of-type {
  height: 48px;
}

@keyframes moveButtonText {
  to {
    text-shadow: -29ch 0 1px $main-color, 0ch 0 1px $main-color;
  }
}

.checkbox-container {
  display: flex;
  font-size: 16px;
  gap: 0.5rem;
  color: white;
  padding-bottom: 1.5rem;
  span {
    color: $main-color;
  }
  position: relative;
  display: flex;
  align-items: center;

  // Verstecke die originale Checkbox, behalte aber Funktionalit채t
  .checkbox {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;

    // Wenn die Checkbox angehakt ist, zeige den Haken im benutzerdefinierten Element an
    &:checked + .custom-checkbox::after {
      display: block;
    }
  }

  // Benutzerdefiniertes Checkbox-Design
  .custom-checkbox {
    position: relative;
    min-height: 18px;
    min-width: 18px;
    background-color: transparent;
    border: 2px solid $main-color; // Deine gew체nschte Farbe
    border-radius: 4px;
    // margin-right: 10px;
    cursor: pointer;

    // Der Haken in der Checkbox
    &::after {
      content: "";
      position: absolute;
      display: none;
      left: 4px;
      top: 0px;
      width: 4px;
      height: 8px;
      border: solid $main-color; // Deine gew체nschte Farbe f체r den Haken
      border-width: 0 3px 3px 0;
      transform: rotate(45deg);
    }
  }

  label {
    cursor: pointer;
  }
}
